{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "751a7493",
   "metadata": {},
   "source": [
    "mission to mars\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "429e0565",
   "metadata": {},
   "outputs": [],
   "source": [
    "from bs4 import BeautifulSoup as bs\n",
    "from splinter import Browser\n",
    "from webdriver_manager.chrome import ChromeDriverManager\n",
    "import pandas as pd\n",
    "import requests"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "8c43cd6f",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n",
      "\n",
      "====== WebDriver manager ======\n",
      "Current google-chrome version is 95.0.4638\n",
      "Get LATEST driver version for 95.0.4638\n",
      "Driver [/Users/henrywycislo/.wdm/drivers/chromedriver/mac64/95.0.4638.17/chromedriver] found in cache\n"
     ]
    }
   ],
   "source": [
    "\n",
    "executable_path = {'executable_path': ChromeDriverManager().install()}\n",
    "browser = Browser('chrome', **executable_path, headless=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "b2b2b35c",
   "metadata": {},
   "outputs": [],
   "source": [
    "mars_news_site = \"https://mars.nasa.gov/news/\"\n",
    "# mars_page = requests.get(mars_news_site)\n",
    "# mars_page\n",
    "browser.visit(mars_news_site)\n",
    "html = browser.html\n",
    "soup = bs(html,'html.parser')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "b1003645",
   "metadata": {},
   "outputs": [],
   "source": [
    "# soup = BeautifulSoup(mars_page.content,'html.parser')\n",
    "# print(soup.prettify())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "00ddb5d8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<div class=\"list_text\"><div class=\"list_date\">October 18, 2021</div><div class=\"content_title\"><a href=\"/news/9057/hear-sounds-from-mars-captured-by-nasas-perseverance-rover/\" target=\"_self\">Hear Sounds From Mars Captured by NASA's Perseverance Rover</a></div><div class=\"article_teaser_body\">Two microphones aboard the six-wheeled spacecraft add a new dimension to the way scientists and engineers explore the Red Planet.</div></div>"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "news_title = soup.find_all(\"div\", class_=\"list_text\")\n",
    "news_title[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "3c70c01a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Hear Sounds From Mars Captured by NASA's Perseverance Rover\n",
      "Two microphones aboard the six-wheeled spacecraft add a new dimension to the way scientists and engineers explore the Red Planet.\n"
     ]
    }
   ],
   "source": [
    "title= news_title[0].find(\"div\",class_='content_title').get_text()\n",
    "paragraph = news_title[0].find(\"div\",class_='article_teaser_body').get_text()\n",
    "print(title)\n",
    "print(paragraph)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9b795512",
   "metadata": {},
   "source": [
    "## Use Splinter to work with JPL website"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "956892fb",
   "metadata": {},
   "outputs": [],
   "source": [
    "# find featured image\n",
    "target_site = 'https://spaceimages-mars.com'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "7b499507",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n",
      "\n",
      "====== WebDriver manager ======\n",
      "Current google-chrome version is 95.0.4638\n",
      "Get LATEST driver version for 95.0.4638\n",
      "Driver [/Users/henrywycislo/.wdm/drivers/chromedriver/mac64/95.0.4638.17/chromedriver] found in cache\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "https://spaceimages-mars.comimage/featured/mars3.jpg\n"
     ]
    }
   ],
   "source": [
    "executable_path = {'executable_path': ChromeDriverManager().install()}\n",
    "browser = Browser('chrome', **executable_path, headless=False)\n",
    "browser.visit(target_site)\n",
    "\n",
    "html = browser.html\n",
    "soup = bs(html,'html.parser')\n",
    "\n",
    "#featured_image_url = browser.find_by_partial_text('featured').value\n",
    "featured_image_url = target_site + soup.find('img', class_='headerimage fade-in')['src']\n",
    "print(featured_image_url)\n",
    "browser.quit()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3ad65b61",
   "metadata": {},
   "source": [
    "### get facts about mars use pandas to get data from https://galaxyfacts-mars.com\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "a971c21b",
   "metadata": {},
   "outputs": [],
   "source": [
    "mars_facts = \"https://galaxyfacts-mars.com\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "f213fdc4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Mars</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Equatorial Diameter:</th>\n",
       "      <td>6,792 km</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Polar Diameter:</th>\n",
       "      <td>6,752 km</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mass:</th>\n",
       "      <td>6.39 × 10^23 kg (0.11 Earths)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Moons:</th>\n",
       "      <td>2 ( Phobos &amp; Deimos )</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Orbit Distance:</th>\n",
       "      <td>227,943,824 km (1.38 AU)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Orbit Period:</th>\n",
       "      <td>687 days (1.9 years)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Surface Temperature:</th>\n",
       "      <td>-87 to -5 °C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>First Record:</th>\n",
       "      <td>2nd millennium BC</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Recorded By:</th>\n",
       "      <td>Egyptian astronomers</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                               Mars\n",
       "Equatorial Diameter:                       6,792 km\n",
       "Polar Diameter:                            6,752 km\n",
       "Mass:                 6.39 × 10^23 kg (0.11 Earths)\n",
       "Moons:                        2 ( Phobos & Deimos )\n",
       "Orbit Distance:            227,943,824 km (1.38 AU)\n",
       "Orbit Period:                  687 days (1.9 years)\n",
       "Surface Temperature:                   -87 to -5 °C\n",
       "First Record:                     2nd millennium BC\n",
       "Recorded By:                   Egyptian astronomers"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mars_series = pd.read_html(mars_facts)\n",
    "# There are two tables on this page, read the first one\n",
    "mars_df = mars_series[1]\n",
    "mars_df.columns = ['Label', 'Mars']\n",
    "mars_df.set_index('Label', inplace=True)\n",
    "#drop index.name to avoid funky second index header row\n",
    "mars_df.index.name=None\n",
    "mars_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "903ba7d3",
   "metadata": {},
   "outputs": [],
   "source": [
    "# create html version of pandas table\n",
    "html_table = mars_df.to_html(index=False, header=False, classes=\"table table-striped\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "987c8113",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<table border=\"1\" class=\"dataframe table table-striped\">\n",
      "  <tbody>\n",
      "    <tr>\n",
      "      <td>6,792 km</td>\n",
      "    </tr>\n",
      "    <tr>\n",
      "      <td>6,752 km</td>\n",
      "    </tr>\n",
      "    <tr>\n",
      "      <td>6.39 × 10^23 kg (0.11 Earths)</td>\n",
      "    </tr>\n",
      "    <tr>\n",
      "      <td>2 ( Phobos &amp; Deimos )</td>\n",
      "    </tr>\n",
      "    <tr>\n",
      "      <td>227,943,824 km (1.38 AU)</td>\n",
      "    </tr>\n",
      "    <tr>\n",
      "      <td>687 days (1.9 years)</td>\n",
      "    </tr>\n",
      "    <tr>\n",
      "      <td>-87 to -5 °C</td>\n",
      "    </tr>\n",
      "    <tr>\n",
      "      <td>2nd millennium BC</td>\n",
      "    </tr>\n",
      "    <tr>\n",
      "      <td>Egyptian astronomers</td>\n",
      "    </tr>\n",
      "  </tbody>\n",
      "</table>\n"
     ]
    }
   ],
   "source": [
    "print(html_table)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "29f87dc4",
   "metadata": {},
   "outputs": [],
   "source": [
    "browser.quit()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cc65a113",
   "metadata": {},
   "source": [
    "## Mars Hemispheres\n",
    "### get data from astrogeology site. Get the image url for the full resolution of each hemisphere. \n",
    "### Save the image url and the hemisphere title and store in a python dictionary\n",
    "### Append the dictionary to a list. The list will contain one dictionary for each hemisphere\n",
    "### https://marshemispheres.com"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "id": "e8e8d041",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n",
      "\n",
      "====== WebDriver manager ======\n",
      "Current google-chrome version is 95.0.4638\n",
      "Get LATEST driver version for 95.0.4638\n",
      "Driver [/Users/henrywycislo/.wdm/drivers/chromedriver/mac64/95.0.4638.17/chromedriver] found in cache\n"
     ]
    }
   ],
   "source": [
    "from time import sleep\n",
    "executable_path = {'executable_path': ChromeDriverManager().install()}\n",
    "browser = Browser('chrome', **executable_path, headless=False)\n",
    "#hemisphere_url = 'https://marshemispheres.com'\n",
    "#browser.visit(hemisphere_url)\n",
    "#set the URL and request\n",
    "hemi_url = 'https://marshemispheres.com'\n",
    "# hemi_url = 'https://astrogeology.usgs.gov/search/results?q=hemisphere+enhanced&k1=target&v1=Mars'\n",
    "# hemi_response = requests.get(hemi_url)\n",
    "browser.visit(hemi_url)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "id": "ca7b60a1",
   "metadata": {},
   "outputs": [],
   "source": [
    "#parse the landing page, isolate the image links in the item div\n",
    "hemi_html = browser.html\n",
    "hemi_soup = bs(hemi_html, \"html.parser\")\n",
    "hemi_links = hemi_soup.find_all(\"div\", class_ = \"item\")\n",
    "\n",
    "#create a list for the names and image links\n",
    "hemisphere_image_urls = []\n",
    "\n",
    "#loop thru each link and grab the name and full size image\n",
    "for link in hemi_links:\n",
    "    #dictionary to hold the name/link pairs\n",
    "    hemi_dict = {}\n",
    "    #name is in the h3 text\n",
    "    img_name = link.find(\"h3\").text\n",
    "    #link is in each desctiption, a href\n",
    "    img_link = link.find(\"div\", class_ = \"description\").a[\"href\"]\n",
    "    #add the base url\n",
    "    # link_base = \"https://astrogeology.usgs.gov\"\n",
    "    link_base = hemi_url\n",
    "    visit_link = link_base +\"/\"+ img_link\n",
    "    #visit the link\n",
    "    browser.visit(visit_link)\n",
    "    #don't go too fast\n",
    "    time.sleep(5)\n",
    "    \n",
    "    #parse the html\n",
    "    indv_hemi_html = browser.html\n",
    "    indv_hemi_soup = bs(indv_hemi_html, 'html.parser')\n",
    "    \n",
    "    #grab the full image link from wide-image src\n",
    "    indv_hemi_url = indv_hemi_soup.find(\"img\", class_ = \"wide-image\")[\"src\"]\n",
    "    \n",
    "    #add to dictionary as hemi_img_name, hemi_img_url\n",
    "    hemi_dict['hemi_img_name'] = img_name\n",
    "    hemi_dict['hemi_img_url'] = link_base + indv_hemi_url\n",
    "    hemi_dict['hemi_source_url'] = visit_link\n",
    "    #put dictionary into hemisphere_image_urls\n",
    "    hemisphere_image_urls.append(hemi_dict)\n",
    "    browser.back()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "id": "9b9fb253",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[{'hemi_img_name': 'Cerberus Hemisphere Enhanced',\n",
       "  'hemi_img_url': 'https://marshemispheres.comimages/f5e372a36edfa389625da6d0cc25d905_cerberus_enhanced.tif_full.jpg',\n",
       "  'hemi_source_url': 'https://marshemispheres.com/cerberus.html'},\n",
       " {'hemi_img_name': 'Schiaparelli Hemisphere Enhanced',\n",
       "  'hemi_img_url': 'https://marshemispheres.comimages/3778f7b43bbbc89d6e3cfabb3613ba93_schiaparelli_enhanced.tif_full.jpg',\n",
       "  'hemi_source_url': 'https://marshemispheres.com/schiaparelli.html'},\n",
       " {'hemi_img_name': 'Syrtis Major Hemisphere Enhanced',\n",
       "  'hemi_img_url': 'https://marshemispheres.comimages/555e6403a6ddd7ba16ddb0e471cadcf7_syrtis_major_enhanced.tif_full.jpg',\n",
       "  'hemi_source_url': 'https://marshemispheres.com/syrtis.html'},\n",
       " {'hemi_img_name': 'Valles Marineris Hemisphere Enhanced',\n",
       "  'hemi_img_url': 'https://marshemispheres.comimages/b3c7c6c9138f57b4756be9b9c43e3a48_valles_marineris_enhanced.tif_full.jpg',\n",
       "  'hemi_source_url': 'https://marshemispheres.com/valles.html'}]"
      ]
     },
     "execution_count": 90,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "hemisphere_image_urls"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "id": "339df8a4",
   "metadata": {},
   "outputs": [],
   "source": [
    "browser.quit()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7406ada0",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python [conda env:PythonData] *",
   "language": "python",
   "name": "conda-env-PythonData-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
